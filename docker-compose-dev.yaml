version: "3.9"

services:
  web-server:
    build:
      context: ./containers/web-server
      dockerfile: Dockerfile-dev
    image: gri-web-server-dev:latest
    volumes:
      - ./containers/web-server/certs:/etc/ssl/certs
    ports:
      - 5443:443
      - 5080:80

  db:
    image: kartoza/postgis:14-3.1
    volumes:
      - postgis-data:/var/lib/postgresql
    env_file:
      - ./envs/dev/.db.env
    expose:
      - 5432
    healthcheck:
      test: "exit 0"

  pgadmin:
    image: dpage/pgadmin4:latest
    volumes:
      - pgadmin:/var/lib/pgadmin
    env_file:
      - ./envs/dev/.pgadmin.env
    ports:
      - 5000:80

  snakemake:
    image: gri-snakemake:latest
    build: ./etl
    volumes:
      - ./etl:/opt/etl
      - ./tileserver:/opt/tileserver
    command: [ "--cores", "1", "-s", "/opt/etl/Snakefile" ]

  backend:
    build: ./containers/backend
    image: gri-backend-dev:latest
    env_file:
      - ./envs/dev/.backend.env
    expose:
      - 8888

  raster-tileserver:
    build: ./containers/raster
    image: gri-raster-tilesverer-dev:latest
    volumes:
      - raster-db:/opt/terracotta/db
      - ./mounts/raster:/opt/terracotta/data # bind mount
      - ./containers/raster/config.toml:/opt/config.toml
      - ./containers/raster/entrypoint.sh:/opt/entrypoint.sh
    ports:
      - 5050:5000
    command: [ "serve" ]
    # command:
    #   [
    #     "-c",
    #     "/opt/config.toml",
    #     "serve",
    #     "-d",
    #     "/opt/terracotta/db/terracotta.sqllite",
    #     "--allow-all-ips",
    #     "--port",
    #     "5000"
    #   ]

  raster-tileserver-generator:
    build: ./containers/raster
    image: gri-raster-tilesverer-dev:latest
    volumes:
      - raster-db:/opt/terracotta/db
      - ./mounts/raster:/opt/terracotta/data # bind mount
      - ./containers/raster/config.toml:/opt/config.toml
    ports:
      - 5050:5000
    command:
      [
        "ingest",
        "/opt/terracotta/data/{type}__rp_{rp}__rcp_{rcp}__epoch_{epoch}__conf_{confidence}.tif",
        "-o",
        "/opt/terracotta/db/terracotta.sqllite"
      ]

  raster-tileserver-optimizer:
    build: ./containers/raster
    image: gri-raster-tilesverer-dev:latest
    volumes:
      - raster-db:/opt/terracotta/db
      - ./mounts/raster:/opt/terracotta/data # bind mount
      - ./containers/raster/config.toml:/opt/config.toml
    command:
      [
        "optimize-rasters",
        "/opt/terracotta/data/*.tif",
        "-o",
        "/opt/terracotta/data/optimized/"
      ]

  vector-tileserver:
    build: ./containers/vector
    image: gri-vector-tilesverer-dev:latest
    volumes:
      - ./mounts/vector:/data # bind mount
      - ./containers/vector/config.json:/config.json
    expose:
      - 8080

volumes:
  dbbackups:
  postgis-data:
  raster-db:
  pgadmin:
